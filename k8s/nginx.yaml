apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: frontend-files
          mountPath: /usr/share/nginx/html
        ports:
        - containerPort: 80
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: frontend-files
        configMap:
          name: frontend-files

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }

        location /api/ {
            proxy_pass http://backend-service:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-files
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Frontend</title>
    </head>
    <body>
        <h1>Get Random Number From 1 To 100</h1>
        <button onclick="callBackend()">Ping Backend</button>
        <p id="response"></p>
        <script>
            function callBackend() {
                fetch("/api/random")  // Запрос через NGINX
                    .then(response => response.text())
                    .then(data => document.getElementById("response").innerText = data)
                    .catch(err => console.error(err));
            }
        </script>
    </body>
    </html>

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30020
  type: NodePort